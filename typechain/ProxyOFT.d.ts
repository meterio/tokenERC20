/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ProxyOFTInterface extends ethers.utils.Interface {
  functions: {
    "DEFAULT_ADMIN_ROLE()": FunctionFragment;
    "DEFAULT_PAYLOAD_SIZE_LIMIT()": FunctionFragment;
    "FUNCTION_TYPE_SEND()": FunctionFragment;
    "NO_EXTRA_GAS()": FunctionFragment;
    "addTokenMapping(uint16,address,address)": FunctionFragment;
    "circulatingSupply()": FunctionFragment;
    "estimateSendFee(address,uint16,bytes,uint256)": FunctionFragment;
    "failedMessages(uint16,bytes,uint64)": FunctionFragment;
    "forceResumeReceive(uint16,bytes)": FunctionFragment;
    "getAllLane()": FunctionFragment;
    "getConfig(uint16,uint16,address,uint256)": FunctionFragment;
    "getRoleAdmin(bytes32)": FunctionFragment;
    "getRoleMember(bytes32,uint256)": FunctionFragment;
    "getRoleMemberCount(bytes32)": FunctionFragment;
    "getTrustedRemoteAddress(uint16)": FunctionFragment;
    "grantRole(bytes32,address)": FunctionFragment;
    "hasRole(bytes32,address)": FunctionFragment;
    "initialize(address,address)": FunctionFragment;
    "isTrustedRemote(uint16,bytes)": FunctionFragment;
    "laneExist(uint16,address)": FunctionFragment;
    "lzEndpoint()": FunctionFragment;
    "lzReceive(uint16,bytes,uint64,bytes)": FunctionFragment;
    "minDstGasLookup(uint16,uint256)": FunctionFragment;
    "nonblockingLzReceive(uint16,bytes,uint64,bytes)": FunctionFragment;
    "pause()": FunctionFragment;
    "paused()": FunctionFragment;
    "precrime()": FunctionFragment;
    "removeTokenMapping(uint16,address)": FunctionFragment;
    "renounceRole(bytes32,address)": FunctionFragment;
    "retryMessage(uint16,bytes,uint64,bytes)": FunctionFragment;
    "revokeRole(bytes32,address)": FunctionFragment;
    "sendFrom(address,uint16,bytes,uint256)": FunctionFragment;
    "setConfig(uint16,uint16,uint256,bytes)": FunctionFragment;
    "setMinDstGas(uint16,uint16,uint256)": FunctionFragment;
    "setPrecrime(address)": FunctionFragment;
    "setReceiveVersion(uint16)": FunctionFragment;
    "setSendVersion(uint16)": FunctionFragment;
    "setTrustedRemote(uint16,bytes)": FunctionFragment;
    "setTrustedRemoteAddress(uint16,bytes)": FunctionFragment;
    "setUseCustomAdapterParams(bool)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "token()": FunctionFragment;
    "tokenMapping(uint16,address)": FunctionFragment;
    "trustedRemoteLookup(uint16)": FunctionFragment;
    "unPause()": FunctionFragment;
    "updateTokenMapping(uint16,address,address)": FunctionFragment;
    "useCustomAdapterParams()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_PAYLOAD_SIZE_LIMIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "FUNCTION_TYPE_SEND",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NO_EXTRA_GAS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenMapping",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "circulatingSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "estimateSendFee",
    values: [string, BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "failedMessages",
    values: [BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "forceResumeReceive",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllLane",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getConfig",
    values: [BigNumberish, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getTrustedRemoteAddress",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedRemote",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "laneExist",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "lzEndpoint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "lzReceive",
    values: [BigNumberish, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "minDstGasLookup",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nonblockingLzReceive",
    values: [BigNumberish, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(functionFragment: "precrime", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "removeTokenMapping",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "retryMessage",
    values: [BigNumberish, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "sendFrom",
    values: [string, BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setConfig",
    values: [BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinDstGas",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setPrecrime", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setReceiveVersion",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setSendVersion",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setTrustedRemote",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setTrustedRemoteAddress",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setUseCustomAdapterParams",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenMapping",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedRemoteLookup",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unPause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "updateTokenMapping",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "useCustomAdapterParams",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_PAYLOAD_SIZE_LIMIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "FUNCTION_TYPE_SEND",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NO_EXTRA_GAS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "circulatingSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "estimateSendFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "failedMessages",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "forceResumeReceive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAllLane", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getConfig", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTrustedRemoteAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedRemote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "laneExist", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lzEndpoint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lzReceive", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "minDstGasLookup",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nonblockingLzReceive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "precrime", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeTokenMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retryMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sendFrom", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setConfig", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setMinDstGas",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPrecrime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReceiveVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSendVersion",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTrustedRemote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTrustedRemoteAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUseCustomAdapterParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedRemoteLookup",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unPause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updateTokenMapping",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "useCustomAdapterParams",
    data: BytesLike
  ): Result;

  events: {
    "Initialized(uint8)": EventFragment;
    "MessageFailed(uint16,bytes,uint64,bytes)": EventFragment;
    "ReceiveFromChain(address,uint16,address,uint256)": EventFragment;
    "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment;
    "RoleGranted(bytes32,address,address)": EventFragment;
    "RoleRevoked(bytes32,address,address)": EventFragment;
    "SendToChain(uint16,address,address,bytes,uint256)": EventFragment;
    "SetMinDstGas(uint16,uint16,uint256)": EventFragment;
    "SetMinDstGasLookup(uint16,uint256,uint256)": EventFragment;
    "SetPrecrime(address)": EventFragment;
    "SetTrustedRemote(uint16,bytes)": EventFragment;
    "SetTrustedRemoteAddress(uint16,bytes)": EventFragment;
    "SetUseCustomAdapterParams(bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MessageFailed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReceiveFromChain"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SendToChain"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetMinDstGas"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetMinDstGasLookup"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetPrecrime"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTrustedRemote"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTrustedRemoteAddress"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetUseCustomAdapterParams"): EventFragment;
}

export class ProxyOFT extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ProxyOFTInterface;

  functions: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    DEFAULT_PAYLOAD_SIZE_LIMIT(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "DEFAULT_PAYLOAD_SIZE_LIMIT()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    FUNCTION_TYPE_SEND(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "FUNCTION_TYPE_SEND()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    NO_EXTRA_GAS(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "NO_EXTRA_GAS()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    addTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    circulatingSupply(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "circulatingSupply()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    estimateSendFee(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      nativeFee: BigNumber;
      zroFee: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "estimateSendFee(address,uint16,bytes,uint256)"(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      nativeFee: BigNumber;
      zroFee: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    failedMessages(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "failedMessages(uint16,bytes,uint64)"(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "forceResumeReceive(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAllLane(overrides?: CallOverrides): Promise<{
      0: {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      }[];
    }>;

    "getAllLane()"(overrides?: CallOverrides): Promise<{
      0: {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      }[];
    }>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getConfig(uint16,uint16,address,uint256)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getTrustedRemoteAddress(uint16)"(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    initialize(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,address)"(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isTrustedRemote(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    laneExist(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "laneExist(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    lzEndpoint(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "lzEndpoint()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    lzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "lzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    minDstGasLookup(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "minDstGasLookup(uint16,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    nonblockingLzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "nonblockingLzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    pause(overrides?: Overrides): Promise<ContractTransaction>;

    "pause()"(overrides?: Overrides): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "paused()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    precrime(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "precrime()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    removeTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeTokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    retryMessage(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "retryMessage(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    sendFrom(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "sendFrom(address,uint16,bytes,uint256)"(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setConfig(uint16,uint16,uint256,bytes)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setMinDstGas(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMinDstGas(uint16,uint16,uint256)"(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setPrecrime(
      _precrime: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setPrecrime(address)"(
      _precrime: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setReceiveVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setSendVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTrustedRemote(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTrustedRemoteAddress(uint16,bytes)"(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setUseCustomAdapterParams(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setUseCustomAdapterParams(bool)"(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    token(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "token()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    tokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      };
    }>;

    "tokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      };
    }>;

    trustedRemoteLookup(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "trustedRemoteLookup(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    unPause(overrides?: Overrides): Promise<ContractTransaction>;

    "unPause()"(overrides?: Overrides): Promise<ContractTransaction>;

    updateTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    useCustomAdapterParams(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;

    "useCustomAdapterParams()"(overrides?: CallOverrides): Promise<{
      0: boolean;
    }>;
  };

  DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

  "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

  DEFAULT_PAYLOAD_SIZE_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

  "DEFAULT_PAYLOAD_SIZE_LIMIT()"(overrides?: CallOverrides): Promise<BigNumber>;

  FUNCTION_TYPE_SEND(overrides?: CallOverrides): Promise<BigNumber>;

  "FUNCTION_TYPE_SEND()"(overrides?: CallOverrides): Promise<BigNumber>;

  NO_EXTRA_GAS(overrides?: CallOverrides): Promise<BigNumber>;

  "NO_EXTRA_GAS()"(overrides?: CallOverrides): Promise<BigNumber>;

  addTokenMapping(
    srcChainId: BigNumberish,
    srcToken: string,
    dstToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addTokenMapping(uint16,address,address)"(
    srcChainId: BigNumberish,
    srcToken: string,
    dstToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  circulatingSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "circulatingSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  estimateSendFee(
    token: string,
    _dstChainId: BigNumberish,
    _toAddress: BytesLike,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    nativeFee: BigNumber;
    zroFee: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "estimateSendFee(address,uint16,bytes,uint256)"(
    token: string,
    _dstChainId: BigNumberish,
    _toAddress: BytesLike,
    _amount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    nativeFee: BigNumber;
    zroFee: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  failedMessages(
    arg0: BigNumberish,
    arg1: BytesLike,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "failedMessages(uint16,bytes,uint64)"(
    arg0: BigNumberish,
    arg1: BytesLike,
    arg2: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  forceResumeReceive(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "forceResumeReceive(uint16,bytes)"(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getAllLane(
    overrides?: CallOverrides
  ): Promise<
    {
      srcChainId: number;
      srcToken: string;
      dstToken: string;
      0: number;
      1: string;
      2: string;
    }[]
  >;

  "getAllLane()"(
    overrides?: CallOverrides
  ): Promise<
    {
      srcChainId: number;
      srcToken: string;
      dstToken: string;
      0: number;
      1: string;
      2: string;
    }[]
  >;

  getConfig(
    _version: BigNumberish,
    _chainId: BigNumberish,
    arg2: string,
    _configType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getConfig(uint16,uint16,address,uint256)"(
    _version: BigNumberish,
    _chainId: BigNumberish,
    arg2: string,
    _configType: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getRoleAdmin(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMember(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getRoleMember(bytes32,uint256)"(
    role: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getRoleMemberCount(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getRoleMemberCount(bytes32)"(
    role: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTrustedRemoteAddress(
    _remoteChainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getTrustedRemoteAddress(uint16)"(
    _remoteChainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  grantRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "grantRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  hasRole(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  initialize(
    _lzEndpoint: string,
    admin: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,address)"(
    _lzEndpoint: string,
    admin: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isTrustedRemote(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isTrustedRemote(uint16,bytes)"(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  laneExist(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "laneExist(uint16,address)"(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  lzEndpoint(overrides?: CallOverrides): Promise<string>;

  "lzEndpoint()"(overrides?: CallOverrides): Promise<string>;

  lzReceive(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "lzReceive(uint16,bytes,uint64,bytes)"(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  minDstGasLookup(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "minDstGasLookup(uint16,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  nonblockingLzReceive(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "nonblockingLzReceive(uint16,bytes,uint64,bytes)"(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  pause(overrides?: Overrides): Promise<ContractTransaction>;

  "pause()"(overrides?: Overrides): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  "paused()"(overrides?: CallOverrides): Promise<boolean>;

  precrime(overrides?: CallOverrides): Promise<string>;

  "precrime()"(overrides?: CallOverrides): Promise<string>;

  removeTokenMapping(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeTokenMapping(uint16,address)"(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  renounceRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "renounceRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  retryMessage(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "retryMessage(uint16,bytes,uint64,bytes)"(
    _srcChainId: BigNumberish,
    _srcAddress: BytesLike,
    _nonce: BigNumberish,
    _payload: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  revokeRole(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeRole(bytes32,address)"(
    role: BytesLike,
    account: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  sendFrom(
    _token: string,
    _dstChainId: BigNumberish,
    _toAddress: BytesLike,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "sendFrom(address,uint16,bytes,uint256)"(
    _token: string,
    _dstChainId: BigNumberish,
    _toAddress: BytesLike,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  setConfig(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _configType: BigNumberish,
    _config: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setConfig(uint16,uint16,uint256,bytes)"(
    _version: BigNumberish,
    _chainId: BigNumberish,
    _configType: BigNumberish,
    _config: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setMinDstGas(
    _dstChainId: BigNumberish,
    _packetType: BigNumberish,
    _minGas: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMinDstGas(uint16,uint16,uint256)"(
    _dstChainId: BigNumberish,
    _packetType: BigNumberish,
    _minGas: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setPrecrime(
    _precrime: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setPrecrime(address)"(
    _precrime: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setReceiveVersion(
    _version: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setReceiveVersion(uint16)"(
    _version: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setSendVersion(
    _version: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setSendVersion(uint16)"(
    _version: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTrustedRemote(
    _srcChainId: BigNumberish,
    _path: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTrustedRemote(uint16,bytes)"(
    _srcChainId: BigNumberish,
    _path: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTrustedRemoteAddress(
    _remoteChainId: BigNumberish,
    _remoteAddress: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTrustedRemoteAddress(uint16,bytes)"(
    _remoteChainId: BigNumberish,
    _remoteAddress: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setUseCustomAdapterParams(
    _useCustomAdapterParams: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setUseCustomAdapterParams(bool)"(
    _useCustomAdapterParams: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  token(overrides?: CallOverrides): Promise<string>;

  "token()"(overrides?: CallOverrides): Promise<string>;

  tokenMapping(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: CallOverrides
  ): Promise<{
    srcChainId: number;
    srcToken: string;
    dstToken: string;
    0: number;
    1: string;
    2: string;
  }>;

  "tokenMapping(uint16,address)"(
    srcChainId: BigNumberish,
    srcToken: string,
    overrides?: CallOverrides
  ): Promise<{
    srcChainId: number;
    srcToken: string;
    dstToken: string;
    0: number;
    1: string;
    2: string;
  }>;

  trustedRemoteLookup(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "trustedRemoteLookup(uint16)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  unPause(overrides?: Overrides): Promise<ContractTransaction>;

  "unPause()"(overrides?: Overrides): Promise<ContractTransaction>;

  updateTokenMapping(
    srcChainId: BigNumberish,
    srcToken: string,
    dstToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateTokenMapping(uint16,address,address)"(
    srcChainId: BigNumberish,
    srcToken: string,
    dstToken: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  useCustomAdapterParams(overrides?: CallOverrides): Promise<boolean>;

  "useCustomAdapterParams()"(overrides?: CallOverrides): Promise<boolean>;

  callStatic: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>;

    DEFAULT_PAYLOAD_SIZE_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_PAYLOAD_SIZE_LIMIT()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    FUNCTION_TYPE_SEND(overrides?: CallOverrides): Promise<BigNumber>;

    "FUNCTION_TYPE_SEND()"(overrides?: CallOverrides): Promise<BigNumber>;

    NO_EXTRA_GAS(overrides?: CallOverrides): Promise<BigNumber>;

    "NO_EXTRA_GAS()"(overrides?: CallOverrides): Promise<BigNumber>;

    addTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    circulatingSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "circulatingSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    estimateSendFee(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      nativeFee: BigNumber;
      zroFee: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "estimateSendFee(address,uint16,bytes,uint256)"(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      nativeFee: BigNumber;
      zroFee: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    failedMessages(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "failedMessages(uint16,bytes,uint64)"(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "forceResumeReceive(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getAllLane(
      overrides?: CallOverrides
    ): Promise<
      {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      }[]
    >;

    "getAllLane()"(
      overrides?: CallOverrides
    ): Promise<
      {
        srcChainId: number;
        srcToken: string;
        dstToken: string;
        0: number;
        1: string;
        2: string;
      }[]
    >;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getConfig(uint16,uint16,address,uint256)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getTrustedRemoteAddress(uint16)"(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initialize(
      _lzEndpoint: string,
      admin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,address)"(
      _lzEndpoint: string,
      admin: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isTrustedRemote(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    laneExist(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "laneExist(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    lzEndpoint(overrides?: CallOverrides): Promise<string>;

    "lzEndpoint()"(overrides?: CallOverrides): Promise<string>;

    lzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "lzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    minDstGasLookup(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "minDstGasLookup(uint16,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nonblockingLzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "nonblockingLzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    pause(overrides?: CallOverrides): Promise<void>;

    "pause()"(overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    "paused()"(overrides?: CallOverrides): Promise<boolean>;

    precrime(overrides?: CallOverrides): Promise<string>;

    "precrime()"(overrides?: CallOverrides): Promise<string>;

    removeTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeTokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    retryMessage(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "retryMessage(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<void>;

    sendFrom(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "sendFrom(address,uint16,bytes,uint256)"(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setConfig(uint16,uint16,uint256,bytes)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinDstGas(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setMinDstGas(uint16,uint16,uint256)"(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setPrecrime(_precrime: string, overrides?: CallOverrides): Promise<void>;

    "setPrecrime(address)"(
      _precrime: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReceiveVersion(uint16)"(
      _version: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setSendVersion(uint16)"(
      _version: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setTrustedRemote(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTrustedRemoteAddress(uint16,bytes)"(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setUseCustomAdapterParams(
      _useCustomAdapterParams: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setUseCustomAdapterParams(bool)"(
      _useCustomAdapterParams: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    token(overrides?: CallOverrides): Promise<string>;

    "token()"(overrides?: CallOverrides): Promise<string>;

    tokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      srcChainId: number;
      srcToken: string;
      dstToken: string;
      0: number;
      1: string;
      2: string;
    }>;

    "tokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<{
      srcChainId: number;
      srcToken: string;
      dstToken: string;
      0: number;
      1: string;
      2: string;
    }>;

    trustedRemoteLookup(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "trustedRemoteLookup(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    unPause(overrides?: CallOverrides): Promise<void>;

    "unPause()"(overrides?: CallOverrides): Promise<void>;

    updateTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: CallOverrides
    ): Promise<void>;

    useCustomAdapterParams(overrides?: CallOverrides): Promise<boolean>;

    "useCustomAdapterParams()"(overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    Initialized(version: null): EventFilter;

    MessageFailed(
      _srcChainId: null,
      _srcAddress: null,
      _nonce: null,
      _payload: null
    ): EventFilter;

    ReceiveFromChain(
      _srcToken: string | null,
      _srcChainId: BigNumberish | null,
      _to: string | null,
      _amount: null
    ): EventFilter;

    RoleAdminChanged(
      role: BytesLike | null,
      previousAdminRole: BytesLike | null,
      newAdminRole: BytesLike | null
    ): EventFilter;

    RoleGranted(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;

    RoleRevoked(
      role: BytesLike | null,
      account: string | null,
      sender: string | null
    ): EventFilter;

    SendToChain(
      _dstChainId: BigNumberish | null,
      _token: string | null,
      _from: string | null,
      _toAddress: null,
      _amount: null
    ): EventFilter;

    SetMinDstGas(_dstChainId: null, _type: null, _minDstGas: null): EventFilter;

    SetMinDstGasLookup(
      _dstChainId: null,
      _type: null,
      _dstGasAmount: null
    ): EventFilter;

    SetPrecrime(precrime: null): EventFilter;

    SetTrustedRemote(_srcChainId: null, _srcAddress: null): EventFilter;

    SetTrustedRemoteAddress(
      _remoteChainId: null,
      _remoteAddress: null
    ): EventFilter;

    SetUseCustomAdapterParams(_useCustomAdapterParams: null): EventFilter;
  };

  estimateGas: {
    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    DEFAULT_PAYLOAD_SIZE_LIMIT(overrides?: CallOverrides): Promise<BigNumber>;

    "DEFAULT_PAYLOAD_SIZE_LIMIT()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    FUNCTION_TYPE_SEND(overrides?: CallOverrides): Promise<BigNumber>;

    "FUNCTION_TYPE_SEND()"(overrides?: CallOverrides): Promise<BigNumber>;

    NO_EXTRA_GAS(overrides?: CallOverrides): Promise<BigNumber>;

    "NO_EXTRA_GAS()"(overrides?: CallOverrides): Promise<BigNumber>;

    addTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    circulatingSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "circulatingSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    estimateSendFee(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "estimateSendFee(address,uint16,bytes,uint256)"(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    failedMessages(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "failedMessages(uint16,bytes,uint64)"(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "forceResumeReceive(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getAllLane(overrides?: CallOverrides): Promise<BigNumber>;

    "getAllLane()"(overrides?: CallOverrides): Promise<BigNumber>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConfig(uint16,uint16,address,uint256)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTrustedRemoteAddress(uint16)"(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,address)"(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isTrustedRemote(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    laneExist(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "laneExist(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lzEndpoint(overrides?: CallOverrides): Promise<BigNumber>;

    "lzEndpoint()"(overrides?: CallOverrides): Promise<BigNumber>;

    lzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "lzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    minDstGasLookup(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "minDstGasLookup(uint16,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nonblockingLzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "nonblockingLzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    pause(overrides?: Overrides): Promise<BigNumber>;

    "pause()"(overrides?: Overrides): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    "paused()"(overrides?: CallOverrides): Promise<BigNumber>;

    precrime(overrides?: CallOverrides): Promise<BigNumber>;

    "precrime()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeTokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    retryMessage(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "retryMessage(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    sendFrom(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "sendFrom(address,uint16,bytes,uint256)"(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setConfig(uint16,uint16,uint256,bytes)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setMinDstGas(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setMinDstGas(uint16,uint16,uint256)"(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setPrecrime(_precrime: string, overrides?: Overrides): Promise<BigNumber>;

    "setPrecrime(address)"(
      _precrime: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setReceiveVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setSendVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTrustedRemote(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTrustedRemoteAddress(uint16,bytes)"(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setUseCustomAdapterParams(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setUseCustomAdapterParams(bool)"(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    token(overrides?: CallOverrides): Promise<BigNumber>;

    "token()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    trustedRemoteLookup(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "trustedRemoteLookup(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unPause(overrides?: Overrides): Promise<BigNumber>;

    "unPause()"(overrides?: Overrides): Promise<BigNumber>;

    updateTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    useCustomAdapterParams(overrides?: CallOverrides): Promise<BigNumber>;

    "useCustomAdapterParams()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    DEFAULT_ADMIN_ROLE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_ADMIN_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DEFAULT_PAYLOAD_SIZE_LIMIT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEFAULT_PAYLOAD_SIZE_LIMIT()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    FUNCTION_TYPE_SEND(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "FUNCTION_TYPE_SEND()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    NO_EXTRA_GAS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "NO_EXTRA_GAS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    circulatingSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "circulatingSupply()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    estimateSendFee(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "estimateSendFee(address,uint16,bytes,uint256)"(
      token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    failedMessages(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "failedMessages(uint16,bytes,uint64)"(
      arg0: BigNumberish,
      arg1: BytesLike,
      arg2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    forceResumeReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "forceResumeReceive(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAllLane(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAllLane()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConfig(uint16,uint16,address,uint256)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      arg2: string,
      _configType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleAdmin(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleAdmin(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMember(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMember(bytes32,uint256)"(
      role: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRoleMemberCount(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getRoleMemberCount(bytes32)"(
      role: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTrustedRemoteAddress(uint16)"(
      _remoteChainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "grantRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    hasRole(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,address)"(
      _lzEndpoint: string,
      admin: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isTrustedRemote(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    laneExist(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "laneExist(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lzEndpoint(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "lzEndpoint()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    lzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "lzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    minDstGasLookup(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "minDstGasLookup(uint16,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nonblockingLzReceive(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "nonblockingLzReceive(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    pause(overrides?: Overrides): Promise<PopulatedTransaction>;

    "pause()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "paused()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    precrime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "precrime()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeTokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    renounceRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "renounceRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    retryMessage(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "retryMessage(uint16,bytes,uint64,bytes)"(
      _srcChainId: BigNumberish,
      _srcAddress: BytesLike,
      _nonce: BigNumberish,
      _payload: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    revokeRole(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeRole(bytes32,address)"(
      role: BytesLike,
      account: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    sendFrom(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "sendFrom(address,uint16,bytes,uint256)"(
      _token: string,
      _dstChainId: BigNumberish,
      _toAddress: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    setConfig(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setConfig(uint16,uint16,uint256,bytes)"(
      _version: BigNumberish,
      _chainId: BigNumberish,
      _configType: BigNumberish,
      _config: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setMinDstGas(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMinDstGas(uint16,uint16,uint256)"(
      _dstChainId: BigNumberish,
      _packetType: BigNumberish,
      _minGas: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setPrecrime(
      _precrime: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setPrecrime(address)"(
      _precrime: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setReceiveVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setReceiveVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setSendVersion(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setSendVersion(uint16)"(
      _version: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTrustedRemote(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTrustedRemote(uint16,bytes)"(
      _srcChainId: BigNumberish,
      _path: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTrustedRemoteAddress(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTrustedRemoteAddress(uint16,bytes)"(
      _remoteChainId: BigNumberish,
      _remoteAddress: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setUseCustomAdapterParams(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setUseCustomAdapterParams(bool)"(
      _useCustomAdapterParams: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    token(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "token()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenMapping(uint16,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    trustedRemoteLookup(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "trustedRemoteLookup(uint16)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unPause(overrides?: Overrides): Promise<PopulatedTransaction>;

    "unPause()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    updateTokenMapping(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateTokenMapping(uint16,address,address)"(
      srcChainId: BigNumberish,
      srcToken: string,
      dstToken: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    useCustomAdapterParams(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "useCustomAdapterParams()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
