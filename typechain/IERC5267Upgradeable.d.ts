/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IERC5267UpgradeableInterface extends ethers.utils.Interface {
  functions: {
    "eip712Domain()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "eip712Domain",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "eip712Domain",
    data: BytesLike
  ): Result;

  events: {
    "EIP712DomainChanged()": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EIP712DomainChanged"): EventFragment;
}

export class IERC5267Upgradeable extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IERC5267UpgradeableInterface;

  functions: {
    eip712Domain(overrides?: CallOverrides): Promise<{
      fields: string;
      name: string;
      version: string;
      chainId: BigNumber;
      verifyingContract: string;
      salt: string;
      extensions: BigNumber[];
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: string;
      6: BigNumber[];
    }>;

    "eip712Domain()"(overrides?: CallOverrides): Promise<{
      fields: string;
      name: string;
      version: string;
      chainId: BigNumber;
      verifyingContract: string;
      salt: string;
      extensions: BigNumber[];
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: string;
      6: BigNumber[];
    }>;
  };

  eip712Domain(overrides?: CallOverrides): Promise<{
    fields: string;
    name: string;
    version: string;
    chainId: BigNumber;
    verifyingContract: string;
    salt: string;
    extensions: BigNumber[];
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: string;
    6: BigNumber[];
  }>;

  "eip712Domain()"(overrides?: CallOverrides): Promise<{
    fields: string;
    name: string;
    version: string;
    chainId: BigNumber;
    verifyingContract: string;
    salt: string;
    extensions: BigNumber[];
    0: string;
    1: string;
    2: string;
    3: BigNumber;
    4: string;
    5: string;
    6: BigNumber[];
  }>;

  callStatic: {
    eip712Domain(overrides?: CallOverrides): Promise<{
      fields: string;
      name: string;
      version: string;
      chainId: BigNumber;
      verifyingContract: string;
      salt: string;
      extensions: BigNumber[];
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: string;
      6: BigNumber[];
    }>;

    "eip712Domain()"(overrides?: CallOverrides): Promise<{
      fields: string;
      name: string;
      version: string;
      chainId: BigNumber;
      verifyingContract: string;
      salt: string;
      extensions: BigNumber[];
      0: string;
      1: string;
      2: string;
      3: BigNumber;
      4: string;
      5: string;
      6: BigNumber[];
    }>;
  };

  filters: {
    EIP712DomainChanged(): EventFilter;
  };

  estimateGas: {
    eip712Domain(overrides?: CallOverrides): Promise<BigNumber>;

    "eip712Domain()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    eip712Domain(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "eip712Domain()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
