/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface EIP712Interface extends ethers.utils.Interface {
  functions: {
    "_CACHED_CHAIN_ID()": FunctionFragment;
    "_CACHED_DOMAIN_SEPARATOR()": FunctionFragment;
    "_CACHED_THIS()": FunctionFragment;
    "_HASHED_NAME()": FunctionFragment;
    "_HASHED_VERSION()": FunctionFragment;
    "_TYPE_HASH()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_CACHED_CHAIN_ID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_CACHED_DOMAIN_SEPARATOR",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_CACHED_THIS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_HASHED_NAME",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_HASHED_VERSION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_TYPE_HASH",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "_CACHED_CHAIN_ID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_CACHED_DOMAIN_SEPARATOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_CACHED_THIS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_HASHED_NAME",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_HASHED_VERSION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "_TYPE_HASH", data: BytesLike): Result;

  events: {};
}

export class EIP712 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EIP712Interface;

  functions: {
    _CACHED_CHAIN_ID(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "_CACHED_CHAIN_ID()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    _CACHED_DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "_CACHED_DOMAIN_SEPARATOR()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    _CACHED_THIS(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "_CACHED_THIS()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    _HASHED_NAME(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "_HASHED_NAME()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    _HASHED_VERSION(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "_HASHED_VERSION()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    _TYPE_HASH(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "_TYPE_HASH()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;
  };

  _CACHED_CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

  "_CACHED_CHAIN_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

  _CACHED_DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;

  "_CACHED_DOMAIN_SEPARATOR()"(overrides?: CallOverrides): Promise<string>;

  _CACHED_THIS(overrides?: CallOverrides): Promise<string>;

  "_CACHED_THIS()"(overrides?: CallOverrides): Promise<string>;

  _HASHED_NAME(overrides?: CallOverrides): Promise<string>;

  "_HASHED_NAME()"(overrides?: CallOverrides): Promise<string>;

  _HASHED_VERSION(overrides?: CallOverrides): Promise<string>;

  "_HASHED_VERSION()"(overrides?: CallOverrides): Promise<string>;

  _TYPE_HASH(overrides?: CallOverrides): Promise<string>;

  "_TYPE_HASH()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    _CACHED_CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "_CACHED_CHAIN_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    _CACHED_DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<string>;

    "_CACHED_DOMAIN_SEPARATOR()"(overrides?: CallOverrides): Promise<string>;

    _CACHED_THIS(overrides?: CallOverrides): Promise<string>;

    "_CACHED_THIS()"(overrides?: CallOverrides): Promise<string>;

    _HASHED_NAME(overrides?: CallOverrides): Promise<string>;

    "_HASHED_NAME()"(overrides?: CallOverrides): Promise<string>;

    _HASHED_VERSION(overrides?: CallOverrides): Promise<string>;

    "_HASHED_VERSION()"(overrides?: CallOverrides): Promise<string>;

    _TYPE_HASH(overrides?: CallOverrides): Promise<string>;

    "_TYPE_HASH()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    _CACHED_CHAIN_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "_CACHED_CHAIN_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    _CACHED_DOMAIN_SEPARATOR(overrides?: CallOverrides): Promise<BigNumber>;

    "_CACHED_DOMAIN_SEPARATOR()"(overrides?: CallOverrides): Promise<BigNumber>;

    _CACHED_THIS(overrides?: CallOverrides): Promise<BigNumber>;

    "_CACHED_THIS()"(overrides?: CallOverrides): Promise<BigNumber>;

    _HASHED_NAME(overrides?: CallOverrides): Promise<BigNumber>;

    "_HASHED_NAME()"(overrides?: CallOverrides): Promise<BigNumber>;

    _HASHED_VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    "_HASHED_VERSION()"(overrides?: CallOverrides): Promise<BigNumber>;

    _TYPE_HASH(overrides?: CallOverrides): Promise<BigNumber>;

    "_TYPE_HASH()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _CACHED_CHAIN_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_CACHED_CHAIN_ID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _CACHED_DOMAIN_SEPARATOR(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_CACHED_DOMAIN_SEPARATOR()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _CACHED_THIS(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_CACHED_THIS()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _HASHED_NAME(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_HASHED_NAME()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _HASHED_VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_HASHED_VERSION()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _TYPE_HASH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_TYPE_HASH()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
