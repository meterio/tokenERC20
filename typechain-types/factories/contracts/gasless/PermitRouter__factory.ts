/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PermitRouter,
  PermitRouterInterface,
} from "../../../contracts/gasless/PermitRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "GaslessSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "path",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wmtr",
    outputs: [
      {
        internalType: "contract IWMTR",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001c0738038062001c07833981016040819052620000349162000230565b6200003f33620001c3565b6001600160a01b0384166200009b5760405162461bcd60e51b815260206004820152601460248201527f70616972206973207a65726f206164647265737300000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038316620000f35760405162461bcd60e51b815260206004820152601660248201527f746f6b656e30206973207a65726f206164647265737300000000000000000000604482015260640162000092565b6001600160a01b0382166200014b5760405162461bcd60e51b815260206004820152601660248201527f746f6b656e31206973207a65726f206164647265737300000000000000000000604482015260640162000092565b6001600160a01b03938416608052600280546001818101835560008390527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace91820180549688166001600160a01b03199788161790558254808201909355910180549390951692909316919091179092555562000282565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200022b57600080fd5b919050565b600080600080608085870312156200024757600080fd5b620002528562000213565b9350620002626020860162000213565b9250620002726040860162000213565b6060959095015193969295505050565b60805161193f620002c86000396000818161022d01528181610326015281816104dd015281816105b70152818161068e015281816108410152610cdb015261193f6000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101fd578063a8aa1b311461021b578063af6d1fe41461024f578063c1153aaa1461026f578063ddca3f431461028f578063f2fde38b146102b357600080fd5b80630446422014610112578063255d591e1461014857806354a4595714610168578063688475c71461018857806369fe0e2d146101c8578063715018a6146101e857600080fd5b3661010d573373160361ce13ec33c993b5cca8f62b6864943eb0831461010b5760405162461bcd60e51b815260206004820152601060248201526f2937baba32b91d102727aa2faba6aa2960811b60448201526064015b60405180910390fd5b005b600080fd5b34801561011e57600080fd5b5061013261012d36600461150e565b6102d3565b60405161013f91906115ed565b60405180910390f35b34801561015457600080fd5b50610132610163366004611631565b6105b0565b34801561017457600080fd5b5061013261018336600461150e565b61063b565b34801561019457600080fd5b506101b073160361ce13ec33c993b5cca8f62b6864943eb08381565b6040516001600160a01b03909116815260200161013f565b3480156101d457600080fd5b5061010b6101e3366004611631565b6107ef565b3480156101f457600080fd5b5061010b6107fc565b34801561020957600080fd5b506000546001600160a01b03166101b0565b34801561022757600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561025b57600080fd5b506101b061026a366004611631565b610810565b34801561027b57600080fd5b5061013261028a366004611631565b61083a565b34801561029b57600080fd5b506102a560015481565b60405190815260200161013f565b3480156102bf57600080fd5b5061010b6102ce36600461164a565b6108bf565b606082428110156103215760405162461bcd60e51b8152602060048201526018602482015277155b9a5cddd85c158c949bdd5d195c8e881156141254915160421b6044820152606401610102565b6103a67f000000000000000000000000000000000000000000000000000000000000000087600280548060200260200160405190810160405280929190818152602001828054801561039c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161037e575b5050505050610938565b915084826000815181106103bc576103bc61166c565b602002602001015111156104225760405162461bcd60e51b815260206004820152602760248201527f556e69737761705632526f757465723a204558434553534956455f494e50555460448201526617d05353d5539560ca1b6064820152608401610102565b60026000815481106104365761043661166c565b600091825260209091200154604051639fd5a6cf60e01b81526001600160a01b0390911690639fd5a6cf90610477908a9030908a908a908a906004016116d2565b600060405180830381600087803b15801561049157600080fd5b505af11580156104a5573d6000803e3d6000fd5b5050505061051860026000815481106104c0576104c061166c565b600091825260208220015484516001600160a01b03909116918a917f000000000000000000000000000000000000000000000000000000000000000091879161050b5761050b61166c565b6020026020010151610ace565b6105228230610bfe565b61052b87610d51565b866001600160a01b03167f3c0992b39b2bf28fd0beb1a02e8e8e6d77db5c47f25f3e7acc4f031f29406787836000815181106105695761056961166c565b6020026020010151846001815181106105845761058461166c565b6020026020010151878760405161059e949392919061170c565b60405180910390a25095945050505050565b60606106357f000000000000000000000000000000000000000000000000000000000000000083600280548060200260200160405190810160405280929190818152602001828054801561039c576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161037e575050505050610938565b92915050565b606082428110156106895760405162461bcd60e51b8152602060048201526018602482015277155b9a5cddd85c158c949bdd5d195c8e881156141254915160421b6044820152606401610102565b61070e7f000000000000000000000000000000000000000000000000000000000000000087600280548060200260200160405190810160405280929190818152602001828054801561070457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106e6575b5050505050610e84565b91508482600184516107209190611747565b815181106107305761073061166c565b6020026020010151101561079a5760405162461bcd60e51b815260206004820152602b60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f4f5560448201526a1514155517d05353d5539560aa1b6064820152608401610102565b60026000815481106107ae576107ae61166c565b600091825260209091200154604051639fd5a6cf60e01b81526001600160a01b0390911690639fd5a6cf90610477908a9030908b908a908a906004016116d2565b6107f7610ffa565b600155565b610804610ffa565b61080e6000611054565b565b6002818154811061082057600080fd5b6000918252602090912001546001600160a01b0316905081565b60606106357f0000000000000000000000000000000000000000000000000000000000000000836002805480602002602001604051908101604052809291908181526020018280548015610704576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116106e6575050505050610e84565b6108c7610ffa565b6001600160a01b03811661092c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610102565b61093581611054565b50565b606060028251101561098c5760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f5041544800006044820152606401610102565b815167ffffffffffffffff8111156109a6576109a66114f8565b6040519080825280602002602001820160405280156109cf578160200160208202803683370190505b5090508281600183516109e29190611747565b815181106109f2576109f261166c565b602002602001018181525050600060018351610a0e9190611747565b90505b8015610ac657600080610a618786610a2a600187611747565b81518110610a3a57610a3a61166c565b6020026020010151878681518110610a5457610a5461166c565b60200260200101516110a4565b91509150610a89848481518110610a7a57610a7a61166c565b60200260200101518383611164565b84610a95600186611747565b81518110610aa557610aa561166c565b60200260200101818152505050508080610abe9061175a565b915050610a11565b509392505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610b329190611771565b6000604051808303816000865af19150503d8060008114610b6f576040519150601f19603f3d011682016040523d82523d6000602084013e610b74565b606091505b5091509150818015610b9e575080511580610b9e575080806020019051810190610b9e919061178d565b610bf65760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b6064820152608401610102565b505050505050565b6000806002600081548110610c1557610c1561166c565b600091825260209091200154600280546001600160a01b03909216916001908110610c4257610c4261166c565b60009182526020822001549193506001600160a01b039091169150610c678383611249565b509050600085600181518110610c7f57610c7f61166c565b60200260200101519050600080836001600160a01b0316866001600160a01b031614610cad57826000610cb1565b6000835b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063022c0d9f90610d1590859085908c90602481016117af565b600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505050505050505050505050565b60006002600181548110610d6757610d6761166c565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc91906117dc565b604051632e1a7d4d60e01b81526004810182905290915073160361ce13ec33c993b5cca8f62b6864943eb08390632e1a7d4d90602401600060405180830381600087803b158015610e2c57600080fd5b505af1158015610e40573d6000803e3d6000fd5b50505050610e7482612710600154612710610e5b9190611747565b610e6590856117f5565b610e6f919061180c565b611340565b47610e7f3382611340565b505050565b6060600282511015610ed85760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f5041544800006044820152606401610102565b815167ffffffffffffffff811115610ef257610ef26114f8565b604051908082528060200260200182016040528015610f1b578160200160208202803683370190505b5090508281600081518110610f3257610f3261166c565b60200260200101818152505060005b60018351610f4f9190611747565b811015610ac657600080610f9587868581518110610f6f57610f6f61166c565b602002602001015187866001610f85919061182e565b81518110610a5457610a5461166c565b91509150610fbd848481518110610fae57610fae61166c565b602002602001015183836113fd565b84610fc985600161182e565b81518110610fd957610fd961166c565b60200260200101818152505050508080610ff290611841565b915050610f41565b6000546001600160a01b0316331461080e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610102565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006110b38585611249565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111b9190611871565b506001600160701b031691506001600160701b03169150826001600160a01b0316876001600160a01b031614611152578082611155565b81815b90999098509650505050505050565b60008084116111ca5760405162461bcd60e51b815260206004820152602c60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4f60448201526b155514155517d05353d5539560a21b6064820152608401610102565b6000831180156111da5750600082115b6111f65760405162461bcd60e51b8152600401610102906118c1565b600061120285856117f5565b61120e906103e86117f5565b9050600061121c8685611747565b611228906103e56117f5565b9050611234818361180c565b61123f90600161182e565b9695505050505050565b600080826001600160a01b0316846001600160a01b0316036112bb5760405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f41444452604482015264455353455360d81b6064820152608401610102565b826001600160a01b0316846001600160a01b0316106112db5782846112de565b83835b90925090506001600160a01b0382166113395760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f4144445245535300006044820152606401610102565b9250929050565b604080516000808252602082019092526001600160a01b03841690839060405161136a9190611771565b60006040518083038185875af1925050503d80600081146113a7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ac565b606091505b5050905080610e7f5760405162461bcd60e51b815260206004820152601f60248201527f566f6c74526f757465723a204554485f5452414e534645525f4641494c4544006044820152606401610102565b60008084116114625760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b6064820152608401610102565b6000831180156114725750600082115b61148e5760405162461bcd60e51b8152600401610102906118c1565b600061149c856103e56117f5565b905060006114aa84836117f5565b90506000826114bb876103e86117f5565b6114c5919061182e565b90506114d1818361180c565b979650505050505050565b80356001600160a01b03811681146114f357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561152657600080fd5b61152f866114dc565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff8082111561156157600080fd5b818801915088601f83011261157557600080fd5b813581811115611587576115876114f8565b604051601f8201601f19908116603f011681019083821181831017156115af576115af6114f8565b816040528281528b60208487010111156115c857600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b6020808252825182820181905260009190848201906040850190845b8181101561162557835183529284019291840191600101611609565b50909695505050505050565b60006020828403121561164357600080fd5b5035919050565b60006020828403121561165c57600080fd5b611665826114dc565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561169d578181015183820152602001611685565b50506000910152565b600081518084526116be816020860160208601611682565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114d1908301846116a6565b84815283602082015282604082015260806060820152600061123f60808301846116a6565b634e487b7160e01b600052601160045260246000fd5b8181038181111561063557610635611731565b60008161176957611769611731565b506000190190565b60008251611783818460208701611682565b9190910192915050565b60006020828403121561179f57600080fd5b8151801515811461166557600080fd5b84815283602082015260018060a01b038316604082015260806060820152600061123f60808301846116a6565b6000602082840312156117ee57600080fd5b5051919050565b808202811582820484141761063557610635611731565b60008261182957634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561063557610635611731565b60006001820161185357611853611731565b5060010190565b80516001600160701b03811681146114f357600080fd5b60008060006060848603121561188657600080fd5b61188f8461185a565b925061189d6020850161185a565b9150604084015163ffffffff811681146118b657600080fd5b809150509250925092565b60208082526028908201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604082015267495155494449545960c01b60608201526080019056fea26469706673582212200fa5e2b7e4e6c154705d734e0542cc49b83c9d14a030bae410258e604f2e49c664736f6c63430008130033";

type PermitRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermitRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermitRouter__factory extends ContractFactory {
  constructor(...args: PermitRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _pair: AddressLike,
    _token0: AddressLike,
    _token1: AddressLike,
    _fee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _pair,
      _token0,
      _token1,
      _fee,
      overrides || {}
    );
  }
  override deploy(
    _pair: AddressLike,
    _token0: AddressLike,
    _token1: AddressLike,
    _fee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _pair,
      _token0,
      _token1,
      _fee,
      overrides || {}
    ) as Promise<
      PermitRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermitRouter__factory {
    return super.connect(runner) as PermitRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermitRouterInterface {
    return new Interface(_abi) as PermitRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermitRouter {
    return new Contract(address, _abi, runner) as unknown as PermitRouter;
  }
}
