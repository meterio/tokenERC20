/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEIP712,
  IEIP712Interface,
} from "../../../../contracts/gasless/interfaces/IEIP712";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEIP712__factory {
  static readonly abi = _abi;
  static createInterface(): IEIP712Interface {
    return new Interface(_abi) as IEIP712Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): IEIP712 {
    return new Contract(address, _abi, runner) as unknown as IEIP712;
  }
}
