/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUniswapV2Pair,
  IUniswapV2PairInterface,
} from "../../../../contracts/gasless/interfaces/IUniswapV2Pair";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "dec0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dec1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r1",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "st",
        type: "bool",
      },
      {
        internalType: "address",
        name: "t0",
        type: "address",
      },
      {
        internalType: "address",
        name: "t1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IUniswapV2Pair__factory {
  static readonly abi = _abi;
  static createInterface(): IUniswapV2PairInterface {
    return new Interface(_abi) as IUniswapV2PairInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUniswapV2Pair {
    return new Contract(address, _abi, runner) as unknown as IUniswapV2Pair;
  }
}
